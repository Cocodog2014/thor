# Generated by Django 5.2.6 on 2025-10-14 03:29

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AccountSummary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "object_id",
                    models.PositiveIntegerField(help_text="ID of the specific account"),
                ),
                (
                    "statement_date",
                    models.DateTimeField(help_text="Date and time of this snapshot"),
                ),
                (
                    "pnl_open",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Unrealized P&L on open positions",
                        max_digits=15,
                    ),
                ),
                (
                    "pnl_day",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Daily P&L",
                        max_digits=15,
                    ),
                ),
                (
                    "pnl_ytd",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Year-to-date P&L",
                        max_digits=15,
                    ),
                ),
                (
                    "pnl_percent",
                    models.DecimalField(
                        decimal_places=4,
                        default=Decimal("0.0000"),
                        help_text="P&L percentage",
                        max_digits=8,
                    ),
                ),
                (
                    "margin_requirement",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Margin requirement at snapshot time",
                        max_digits=15,
                    ),
                ),
                (
                    "mark_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Mark-to-market value of positions",
                        max_digits=15,
                    ),
                ),
                (
                    "net_liquidating_value_snapshot",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Net liquidating value at snapshot time",
                        max_digits=15,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        help_text="Type of account (Paper or Real)",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Account Summary",
                "verbose_name_plural": "Account Summaries",
                "ordering": ["-statement_date"],
                "unique_together": {("content_type", "object_id", "statement_date")},
            },
        ),
        migrations.CreateModel(
            name="PaperAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        blank=True,
                        help_text="External account number (e.g., Schwab account number)",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "base_currency",
                    models.CharField(
                        default="USD",
                        help_text="Base currency for the account",
                        max_length=3,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("CLOSED", "Closed"),
                            ("SUSPENDED", "Suspended"),
                            ("PENDING", "Pending Approval"),
                        ],
                        default="ACTIVE",
                        help_text="Current account status",
                        max_length=10,
                    ),
                ),
                (
                    "net_liquidating_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total account value if all positions were liquidated",
                        max_digits=15,
                    ),
                ),
                (
                    "stock_buying_power",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Available funds for stock purchases",
                        max_digits=15,
                    ),
                ),
                (
                    "option_buying_power",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Available funds for option purchases",
                        max_digits=15,
                    ),
                ),
                (
                    "available_funds_for_trading",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Available funds for trading activities",
                        max_digits=15,
                    ),
                ),
                (
                    "long_stock_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total value of long stock positions",
                        max_digits=15,
                    ),
                ),
                (
                    "long_marginable_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Value of long marginable securities",
                        max_digits=15,
                    ),
                ),
                (
                    "short_marginable_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Value of short marginable securities",
                        max_digits=15,
                    ),
                ),
                (
                    "margin_equity",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Equity available for margin trading",
                        max_digits=15,
                    ),
                ),
                (
                    "equity_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("100.00"),
                        help_text="Equity percentage (0-100)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "maintenance_requirement",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Minimum equity required to maintain positions",
                        max_digits=15,
                    ),
                ),
                (
                    "money_market_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Cash balance in money market fund",
                        max_digits=15,
                    ),
                ),
                (
                    "equity_commissions_fees_ytd",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Year-to-date equity commissions and fees",
                        max_digits=10,
                    ),
                ),
                (
                    "option_commissions_fees_ytd",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Year-to-date option commissions and fees",
                        max_digits=10,
                    ),
                ),
                (
                    "futures_commissions_fees_ytd",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Year-to-date futures commissions and fees",
                        max_digits=10,
                    ),
                ),
                (
                    "total_commissions_fees_ytd",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total year-to-date commissions and fees",
                        max_digits=10,
                    ),
                ),
                (
                    "current_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Current cash balance",
                        max_digits=15,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "last_statement_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date of last account statement update",
                        null=True,
                    ),
                ),
                (
                    "starting_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("100000.00"),
                        help_text="Initial virtual balance for paper trading",
                        max_digits=15,
                    ),
                ),
                (
                    "reset_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of times account has been reset"
                    ),
                ),
                (
                    "last_reset_date",
                    models.DateTimeField(
                        blank=True, help_text="Date of last account reset", null=True
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Account owner",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Paper Trading Account",
                "verbose_name_plural": "Paper Trading Accounts",
                "ordering": ["user__email"],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("user",), name="one_paper_account_per_user"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="RealAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        blank=True,
                        help_text="External account number (e.g., Schwab account number)",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "base_currency",
                    models.CharField(
                        default="USD",
                        help_text="Base currency for the account",
                        max_length=3,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("CLOSED", "Closed"),
                            ("SUSPENDED", "Suspended"),
                            ("PENDING", "Pending Approval"),
                        ],
                        default="ACTIVE",
                        help_text="Current account status",
                        max_length=10,
                    ),
                ),
                (
                    "net_liquidating_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total account value if all positions were liquidated",
                        max_digits=15,
                    ),
                ),
                (
                    "stock_buying_power",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Available funds for stock purchases",
                        max_digits=15,
                    ),
                ),
                (
                    "option_buying_power",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Available funds for option purchases",
                        max_digits=15,
                    ),
                ),
                (
                    "available_funds_for_trading",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Available funds for trading activities",
                        max_digits=15,
                    ),
                ),
                (
                    "long_stock_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total value of long stock positions",
                        max_digits=15,
                    ),
                ),
                (
                    "long_marginable_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Value of long marginable securities",
                        max_digits=15,
                    ),
                ),
                (
                    "short_marginable_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Value of short marginable securities",
                        max_digits=15,
                    ),
                ),
                (
                    "margin_equity",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Equity available for margin trading",
                        max_digits=15,
                    ),
                ),
                (
                    "equity_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("100.00"),
                        help_text="Equity percentage (0-100)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "maintenance_requirement",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Minimum equity required to maintain positions",
                        max_digits=15,
                    ),
                ),
                (
                    "money_market_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Cash balance in money market fund",
                        max_digits=15,
                    ),
                ),
                (
                    "equity_commissions_fees_ytd",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Year-to-date equity commissions and fees",
                        max_digits=10,
                    ),
                ),
                (
                    "option_commissions_fees_ytd",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Year-to-date option commissions and fees",
                        max_digits=10,
                    ),
                ),
                (
                    "futures_commissions_fees_ytd",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Year-to-date futures commissions and fees",
                        max_digits=10,
                    ),
                ),
                (
                    "total_commissions_fees_ytd",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total year-to-date commissions and fees",
                        max_digits=10,
                    ),
                ),
                (
                    "current_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Current cash balance",
                        max_digits=15,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "last_statement_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date of last account statement update",
                        null=True,
                    ),
                ),
                (
                    "brokerage_provider",
                    models.CharField(
                        choices=[
                            ("SCHWAB", "Charles Schwab"),
                            ("IB", "Interactive Brokers"),
                            ("TDA", "TD Ameritrade"),
                            ("FIDELITY", "Fidelity"),
                            ("OTHER", "Other Brokerage"),
                        ],
                        default="SCHWAB",
                        help_text="Brokerage provider for this account",
                        max_length=20,
                    ),
                ),
                (
                    "external_account_id",
                    models.CharField(
                        blank=True,
                        help_text="External account ID from brokerage API",
                        max_length=50,
                    ),
                ),
                (
                    "account_nickname",
                    models.CharField(
                        blank=True,
                        help_text="User-defined nickname for this account",
                        max_length=100,
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether account has been verified with brokerage",
                    ),
                ),
                (
                    "verification_date",
                    models.DateTimeField(
                        blank=True, help_text="Date account was verified", null=True
                    ),
                ),
                (
                    "day_trading_enabled",
                    models.BooleanField(
                        default=False, help_text="Whether day trading is enabled"
                    ),
                ),
                (
                    "margin_enabled",
                    models.BooleanField(
                        default=False, help_text="Whether margin trading is enabled"
                    ),
                ),
                (
                    "options_level",
                    models.PositiveSmallIntegerField(
                        default=0, help_text="Options trading level (0-4)"
                    ),
                ),
                (
                    "api_enabled",
                    models.BooleanField(
                        default=False, help_text="Whether API access is configured"
                    ),
                ),
                (
                    "last_sync_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Last successful sync with brokerage API",
                        null=True,
                    ),
                ),
                (
                    "sync_errors",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of consecutive sync errors"
                    ),
                ),
                (
                    "daily_loss_limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum daily loss limit",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "position_size_limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum position size limit",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Account owner",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Real Money Account",
                "verbose_name_plural": "Real Money Accounts",
                "ordering": ["user__email", "brokerage_provider"],
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("external_account_id__isnull", False)),
                        fields=("user", "external_account_id"),
                        name="unique_external_account_per_user",
                    )
                ],
            },
        ),
    ]
