# Generated by Django 5.2.6 on 2025-09-22 02:01

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataProviderConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('api_key', models.CharField(blank=True, max_length=200)),
                ('base_url', models.URLField()),
                ('requests_per_minute', models.IntegerField(default=60)),
                ('requests_per_day', models.IntegerField(blank=True, null=True)),
                ('supports_real_time', models.BooleanField(default=True)),
                ('supports_historical', models.BooleanField(default=True)),
                ('supports_crypto', models.BooleanField(default=False)),
                ('supports_forex', models.BooleanField(default=False)),
                ('supports_futures', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('config', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Data Provider Config',
                'verbose_name_plural': 'Data Provider Configs',
                'ordering': ['-is_primary', 'name'],
            },
        ),
        migrations.CreateModel(
            name='InstrumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('color_primary', models.CharField(default='#4CAF50', max_length=7)),
                ('color_secondary', models.CharField(default='#81C784', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Instrument Category',
                'verbose_name_plural': 'Instrument Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='WatchlistGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#2196F3', max_length=7)),
                ('sort_order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Watchlist Group',
                'verbose_name_plural': 'Watchlist Groups',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TradingInstrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('exchange', models.CharField(blank=True, max_length=50)),
                ('currency', models.CharField(default='USD', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_watchlist', models.BooleanField(default=False)),
                ('sort_order', models.IntegerField(default=0)),
                ('display_precision', models.IntegerField(default=2)),
                ('tick_size', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('contract_size', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('api_provider', models.CharField(blank=True, max_length=50)),
                ('api_symbol', models.CharField(blank=True, max_length=100)),
                ('update_frequency', models.IntegerField(default=5)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('is_market_open', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instruments', to='futuretrading.instrumentcategory')),
            ],
            options={
                'verbose_name': 'Trading Instrument',
                'verbose_name_plural': 'Trading Instruments',
                'ordering': ['sort_order', 'symbol'],
            },
        ),
        migrations.CreateModel(
            name='MarketData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=6, max_digits=15)),
                ('bid', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('ask', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('last_size', models.IntegerField(blank=True, null=True)),
                ('bid_size', models.IntegerField(blank=True, null=True)),
                ('ask_size', models.IntegerField(blank=True, null=True)),
                ('open_price', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('high_price', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('low_price', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('close_price', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('previous_close', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('change', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('change_percent', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('vwap', models.IntegerField(blank=True, null=True)),
                ('volume', models.BigIntegerField(blank=True, null=True)),
                ('average_volume', models.BigIntegerField(blank=True, null=True)),
                ('market_status', models.CharField(choices=[('OPEN', 'Market Open'), ('CLOSED', 'Market Closed'), ('PREMARKET', 'Pre-Market'), ('AFTERHOURS', 'After Hours'), ('HALT', 'Trading Halt')], default='CLOSED', max_length=20)),
                ('data_source', models.CharField(blank=True, max_length=50)),
                ('is_real_time', models.BooleanField(default=True)),
                ('delay_minutes', models.IntegerField(default=0)),
                ('extended_data', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='market_data', to='futuretrading.tradinginstrument')),
            ],
            options={
                'verbose_name': 'Market Data',
                'verbose_name_plural': 'Market Data',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['instrument', '-timestamp'], name='futuretradi_instrum_b96ae9_idx'), models.Index(fields=['market_status'], name='futuretradi_market__9ba316_idx'), models.Index(fields=['timestamp'], name='futuretradi_timesta_8df8ca_idx')],
            },
        ),
        migrations.CreateModel(
            name='TradingSignal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signal', models.CharField(choices=[('STRONG_BUY', 'Strong Buy'), ('BUY', 'Buy'), ('HOLD', 'Hold'), ('SELL', 'Sell'), ('STRONG_SELL', 'Strong Sell')], default='HOLD', max_length=20)),
                ('confidence', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('strength', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('signal_source', models.CharField(blank=True, max_length=100)),
                ('algorithm_version', models.CharField(blank=True, max_length=50)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signals', to='futuretrading.tradinginstrument')),
            ],
            options={
                'verbose_name': 'Trading Signal',
                'verbose_name_plural': 'Trading Signals',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['instrument', '-created_at'], name='futuretradi_instrum_1f8062_idx'), models.Index(fields=['signal'], name='futuretradi_signal_a9ba63_idx')],
            },
        ),
        migrations.CreateModel(
            name='WatchlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('show_extended_hours', models.BooleanField(default=False)),
                ('alert_price_above', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('alert_price_below', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='futuretrading.watchlistgroup')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchlist_items', to='futuretrading.tradinginstrument')),
            ],
            options={
                'verbose_name': 'Watchlist Item',
                'verbose_name_plural': 'Watchlist Items',
                'ordering': ['sort_order', 'instrument__symbol'],
                'unique_together': {('group', 'instrument')},
            },
        ),
    ]
