# Generated by Django 5.2.6 on 2025-10-10 18:23

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DataProviderConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("display_name", models.CharField(max_length=100)),
                ("api_key", models.CharField(blank=True, max_length=200)),
                ("base_url", models.URLField()),
                ("requests_per_minute", models.IntegerField(default=60)),
                ("requests_per_day", models.IntegerField(blank=True, null=True)),
                ("supports_real_time", models.BooleanField(default=True)),
                ("supports_historical", models.BooleanField(default=True)),
                ("supports_crypto", models.BooleanField(default=False)),
                ("supports_forex", models.BooleanField(default=False)),
                ("supports_futures", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_primary", models.BooleanField(default=False)),
                ("config", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Data Provider Config",
                "verbose_name_plural": "Data Provider Configs",
                "ordering": ["-is_primary", "name"],
            },
        ),
        migrations.CreateModel(
            name="HbsThresholds",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("buy_hi", models.DecimalField(decimal_places=6, max_digits=10)),
                ("buy_lo", models.DecimalField(decimal_places=6, max_digits=10)),
                ("sell_lo", models.DecimalField(decimal_places=6, max_digits=10)),
                ("sell_hi", models.DecimalField(decimal_places=6, max_digits=10)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "HBS Threshold",
                "verbose_name_plural": "HBS Thresholds",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="InstrumentCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("display_name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("sort_order", models.IntegerField(default=0)),
                ("color_primary", models.CharField(default="#4CAF50", max_length=7)),
                ("color_secondary", models.CharField(default="#81C784", max_length=7)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Instrument Category",
                "verbose_name_plural": "Instrument Categories",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="SignalWeight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "signal",
                    models.CharField(
                        choices=[
                            ("STRONG_BUY", "Strong Buy"),
                            ("BUY", "Buy"),
                            ("HOLD", "Hold"),
                            ("SELL", "Sell"),
                            ("STRONG_SELL", "Strong Sell"),
                        ],
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "weight",
                    models.IntegerField(
                        help_text="Weight value for this signal type (e.g., 2, 1, 0, -1, -2)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Signal Weight",
                "verbose_name_plural": "Signal Weights",
                "ordering": ["-weight"],
            },
        ),
        migrations.CreateModel(
            name="WatchlistGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("color", models.CharField(default="#2196F3", max_length=7)),
                ("sort_order", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Watchlist Group",
                "verbose_name_plural": "Watchlist Groups",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="TradingInstrument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=50, unique=True)),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("exchange", models.CharField(blank=True, max_length=50)),
                ("currency", models.CharField(default="USD", max_length=10)),
                ("is_active", models.BooleanField(default=True)),
                ("is_watchlist", models.BooleanField(default=False)),
                ("sort_order", models.IntegerField(default=0)),
                ("display_precision", models.IntegerField(default=2)),
                (
                    "tick_size",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=10, null=True
                    ),
                ),
                (
                    "contract_size",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("api_provider", models.CharField(blank=True, max_length=50)),
                ("api_symbol", models.CharField(blank=True, max_length=100)),
                ("update_frequency", models.IntegerField(default=5)),
                ("last_updated", models.DateTimeField(blank=True, null=True)),
                ("is_market_open", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instruments",
                        to="FutureTrading.instrumentcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Trading Instrument",
                "verbose_name_plural": "Trading Instruments",
                "ordering": ["sort_order", "symbol"],
            },
        ),
        migrations.CreateModel(
            name="ContractWeight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=6, default=Decimal("1.0"), max_digits=8
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "instrument",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contract_weight",
                        to="FutureTrading.tradinginstrument",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contract Weight",
                "verbose_name_plural": "Contract Weights",
                "ordering": ["instrument__symbol"],
            },
        ),
        migrations.CreateModel(
            name="SignalStatValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "signal",
                    models.CharField(
                        choices=[
                            ("STRONG_BUY", "Strong Buy"),
                            ("BUY", "Buy"),
                            ("HOLD", "Hold"),
                            ("SELL", "Sell"),
                            ("STRONG_SELL", "Strong Sell"),
                        ],
                        max_length=20,
                    ),
                ),
                ("value", models.DecimalField(decimal_places=6, max_digits=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "instrument",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="signal_stat_values",
                        to="FutureTrading.tradinginstrument",
                    ),
                ),
            ],
            options={
                "verbose_name": "Signal Statistical Value",
                "verbose_name_plural": "Signal Statistical Values",
                "ordering": ["instrument__symbol", "signal"],
                "unique_together": {("instrument", "signal")},
            },
        ),
        migrations.CreateModel(
            name="MarketData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=6, max_digits=15)),
                (
                    "bid",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=15, null=True
                    ),
                ),
                (
                    "ask",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=15, null=True
                    ),
                ),
                ("last_size", models.IntegerField(blank=True, null=True)),
                ("bid_size", models.IntegerField(blank=True, null=True)),
                ("ask_size", models.IntegerField(blank=True, null=True)),
                (
                    "open_price",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=15, null=True
                    ),
                ),
                (
                    "high_price",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=15, null=True
                    ),
                ),
                (
                    "low_price",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=15, null=True
                    ),
                ),
                (
                    "close_price",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=15, null=True
                    ),
                ),
                (
                    "previous_close",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=15, null=True
                    ),
                ),
                (
                    "change",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=15, null=True
                    ),
                ),
                (
                    "change_percent",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                ("vwap", models.IntegerField(blank=True, null=True)),
                ("volume", models.BigIntegerField(blank=True, null=True)),
                ("average_volume", models.BigIntegerField(blank=True, null=True)),
                (
                    "market_status",
                    models.CharField(
                        choices=[
                            ("OPEN", "Market Open"),
                            ("CLOSED", "Market Closed"),
                            ("PREMARKET", "Pre-Market"),
                            ("AFTERHOURS", "After Hours"),
                            ("HALT", "Trading Halt"),
                        ],
                        default="CLOSED",
                        max_length=20,
                    ),
                ),
                ("data_source", models.CharField(blank=True, max_length=50)),
                ("is_real_time", models.BooleanField(default=True)),
                ("delay_minutes", models.IntegerField(default=0)),
                ("extended_data", models.JSONField(blank=True, default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "instrument",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="market_data",
                        to="FutureTrading.tradinginstrument",
                    ),
                ),
            ],
            options={
                "verbose_name": "Market Data",
                "verbose_name_plural": "Market Data",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["instrument", "-timestamp"],
                        name="FutureTradi_instrum_c725a7_idx",
                    ),
                    models.Index(
                        fields=["market_status"], name="FutureTradi_market__56ffa3_idx"
                    ),
                    models.Index(
                        fields=["timestamp"], name="FutureTradi_timesta_810787_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="TradingSignal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "signal",
                    models.CharField(
                        choices=[
                            ("STRONG_BUY", "Strong Buy"),
                            ("BUY", "Buy"),
                            ("HOLD", "Hold"),
                            ("SELL", "Sell"),
                            ("STRONG_SELL", "Strong Sell"),
                        ],
                        default="HOLD",
                        max_length=20,
                    ),
                ),
                (
                    "confidence",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "strength",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                ("signal_source", models.CharField(blank=True, max_length=100)),
                ("algorithm_version", models.CharField(blank=True, max_length=50)),
                ("valid_until", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "instrument",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="signals",
                        to="FutureTrading.tradinginstrument",
                    ),
                ),
            ],
            options={
                "verbose_name": "Trading Signal",
                "verbose_name_plural": "Trading Signals",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["instrument", "-created_at"],
                        name="FutureTradi_instrum_493fe6_idx",
                    ),
                    models.Index(
                        fields=["signal"], name="FutureTradi_signal_2c7cab_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="WatchlistItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sort_order", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("show_extended_hours", models.BooleanField(default=False)),
                (
                    "alert_price_above",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=15, null=True
                    ),
                ),
                (
                    "alert_price_below",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=15, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="FutureTrading.watchlistgroup",
                    ),
                ),
                (
                    "instrument",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="watchlist_items",
                        to="FutureTrading.tradinginstrument",
                    ),
                ),
            ],
            options={
                "verbose_name": "Watchlist Item",
                "verbose_name_plural": "Watchlist Items",
                "ordering": ["sort_order", "instrument__symbol"],
                "unique_together": {("group", "instrument")},
            },
        ),
    ]
